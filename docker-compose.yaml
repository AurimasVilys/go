services:
  go:
    build: ./.docker/dev
    container_name: scootin-go
    hostname: scootin-go
    environment:
      CGO_ENABLED: 0
      GO111MODULE: "on"
    volumes:
      - .:/app:cached
    working_dir: /app
    command: go run main.go
    ports:
      - 8081:80
      - 64782:64782
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    container_name: scootin-mysql
    hostname: scootin-mysql
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: root

  kafka:
    image: 'bitnami/kafka:3.7.0'
    hostname: kafka
    ports:
      - "9192:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: kafka-cluster.sh cluster-id --bootstrap-server kafka0:9092 || exit 1
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - kafka:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on:
      - kafka
    ports:
      - "8181:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

volumes:
  mysql-data: { }
  kafka: { }